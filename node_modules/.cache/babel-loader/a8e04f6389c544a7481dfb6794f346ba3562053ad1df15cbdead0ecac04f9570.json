{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\doppi\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\Trabalho da Faculdade\\\\src\\\\ServiceForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react'; // Importa React e os hooks useState e useEffect\n\n// Componente para o formulário de serviços\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ServiceForm({\n  addService,\n  currentService,\n  updateService\n}) {\n  _s();\n  const [name, setName] = useState(currentService ? currentService.name : ''); // Estado para o nome do serviço\n  const [description, setDescription] = useState(currentService ? currentService.description : ''); // Estado para a descrição do serviço\n\n  // Função de submissão do formulário\n  const handleSubmit = e => {\n    e.preventDefault(); // Previne o comportamento padrão do formulário\n    if (currentService) {\n      updateService({\n        name,\n        description\n      }); // Atualiza o serviço se estiver editando\n    } else {\n      addService({\n        name,\n        description\n      }); // Adiciona um novo serviço se não estiver editando\n    }\n    setName(''); // Reseta o campo de nome\n    setDescription(''); // Reseta o campo de descrição\n  };\n\n  // Efeito para preencher o formulário com dados do serviço atual ao editar\n  useEffect(() => {\n    if (currentService) {\n      setName(currentService.name);\n      setDescription(currentService.description);\n    }\n  }, [currentService]);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Nome do Servi\\xE7o\",\n      value: name,\n      onChange: e => setName(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Descri\\xE7\\xE3o do Servi\\xE7o\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: currentService ? 'Atualizar Serviço' : 'Adicionar Serviço'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(ServiceForm, \"TlJTkQb0Ng/r8h6wZt2vnXWt2x8=\");\n_c = ServiceForm;\nexport default ServiceForm; // Exporta o componente ServiceForm\nvar _c;\n$RefreshReg$(_c, \"ServiceForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ServiceForm","addService","currentService","updateService","_s","name","setName","description","setDescription","handleSubmit","e","preventDefault","onSubmit","children","type","placeholder","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/doppi/OneDrive/Área de Trabalho/Trabalho da Faculdade/src/ServiceForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'; // Importa React e os hooks useState e useEffect\r\n\r\n// Componente para o formulário de serviços\r\nfunction ServiceForm({ addService, currentService, updateService }) {\r\n  const [name, setName] = useState(currentService ? currentService.name : ''); // Estado para o nome do serviço\r\n  const [description, setDescription] = useState(currentService ? currentService.description : ''); // Estado para a descrição do serviço\r\n\r\n  // Função de submissão do formulário\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault(); // Previne o comportamento padrão do formulário\r\n    if (currentService) {\r\n      updateService({ name, description }); // Atualiza o serviço se estiver editando\r\n    } else {\r\n      addService({ name, description }); // Adiciona um novo serviço se não estiver editando\r\n    }\r\n    setName(''); // Reseta o campo de nome\r\n    setDescription(''); // Reseta o campo de descrição\r\n  };\r\n\r\n  // Efeito para preencher o formulário com dados do serviço atual ao editar\r\n  useEffect(() => {\r\n    if (currentService) {\r\n      setName(currentService.name);\r\n      setDescription(currentService.description);\r\n    }\r\n  }, [currentService]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Nome do Serviço\"\r\n        value={name}\r\n        onChange={(e) => setName(e.target.value)}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Descrição do Serviço\"\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n      />\r\n      <button type=\"submit\">{currentService ? 'Atualizar Serviço' : 'Adicionar Serviço'}</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ServiceForm; // Exporta o componente ServiceForm\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO,CAAC,CAAC;;AAEpD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,SAASC,WAAWA,CAAC;EAAEC,UAAU;EAAEC,cAAc;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EAClE,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAACM,cAAc,GAAGA,cAAc,CAACG,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;EAC7E,MAAM,CAACE,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAACM,cAAc,GAAGA,cAAc,CAACK,WAAW,GAAG,EAAE,CAAC,CAAC,CAAC;;EAElG;EACA,MAAME,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC,CAAC;IACpB,IAAIT,cAAc,EAAE;MAClBC,aAAa,CAAC;QAAEE,IAAI;QAAEE;MAAY,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC,MAAM;MACLN,UAAU,CAAC;QAAEI,IAAI;QAAEE;MAAY,CAAC,CAAC,CAAC,CAAC;IACrC;IACAD,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;IACbE,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;EACtB,CAAC;;EAED;EACAX,SAAS,CAAC,MAAM;IACd,IAAIK,cAAc,EAAE;MAClBI,OAAO,CAACJ,cAAc,CAACG,IAAI,CAAC;MAC5BG,cAAc,CAACN,cAAc,CAACK,WAAW,CAAC;IAC5C;EACF,CAAC,EAAE,CAACL,cAAc,CAAC,CAAC;EAEpB,oBACEH,OAAA;IAAMa,QAAQ,EAAEH,YAAa;IAAAI,QAAA,gBAC3Bd,OAAA;MACEe,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,oBAAiB;MAC7BC,KAAK,EAAEX,IAAK;MACZY,QAAQ,EAAGP,CAAC,IAAKJ,OAAO,CAACI,CAAC,CAACQ,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC,eACFvB,OAAA;MACEe,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,+BAAsB;MAClCC,KAAK,EAAET,WAAY;MACnBU,QAAQ,EAAGP,CAAC,IAAKF,cAAc,CAACE,CAAC,CAACQ,MAAM,CAACF,KAAK;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjD,CAAC,eACFvB,OAAA;MAAQe,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAEX,cAAc,GAAG,mBAAmB,GAAG;IAAmB;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvF,CAAC;AAEX;AAAClB,EAAA,CAzCQJ,WAAW;AAAAuB,EAAA,GAAXvB,WAAW;AA2CpB,eAAeA,WAAW,CAAC,CAAC;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}